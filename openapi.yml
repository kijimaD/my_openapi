---
openapi: "3.1.0"

info:
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/7/7f/Rotating_earth_animated_transparent.gif?20201022124448
  description: |
    ## develop
    hello world
      - list
        - A
        - B

  version: 1.0.1
  title: API Docs
  contact:
    name: kijimad
    email: norimaking777@gmail.com

servers:
  - url: http://localhost:6969
    description: ローカル環境モック(Prism)

tags:
  - name: Pet
    x-displayName: 🐶ペット
    description: |
      ペット

paths:
  /pets:
    get:
      summary: ペット一覧
      description: ペット一覧
      operationId: list_pets
      tags:
        - Pet
      parameters:
        - $ref: "#/components/parameters/Limit"
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                required:
                  - pets
                properties:
                  pets:
                    $ref: "#/components/schemas/Pets"
              examples:
                case1:
                  summary: petsが存在する
                  $ref: "#/components/examples/PetsResponse"
                case2:
                  summary: petsが存在しない
                  value:
                    pets: []
        '404':
          description: '存在しない'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pets/{pet_id}:
    get:
      summary: pet詳細
      description: pet詳細
      operationId: showPet
      tags:
        - Pet
      parameters:
        - $ref: "#/components/parameters/PetId"
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
              examples:
                case1:
                  summary: petが存在する(A)
                  $ref: "#/components/examples/PetResponseA"
                case2:
                  summary: petが存在する(B)
                  $ref: "#/components/examples/PetResponseB"
        '404':
          description: '存在しない'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Pet:
      required:
        - id
        - name
      properties:
        id:
          type: integer
          description: pet id
        name:
          type: string
          description: 名前
        coord:
          description: 座標
          $ref: "#/components/schemas/Coord3"
    Pets:
      type: array
      description: ペット一覧
      items:
        properties:
          id:
            type: integer
            description: pet ID
    Coord3:
      description: 三次元座標
      required:
        - x
        - y
        - z
      properties:
        x:
          description: X座標
          type: number
          format: double
        y:
          description: Y座標
          type: number
          format: double
        z:
          description: Z座標
          type: number
          format: double
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
  examples:
    PetsResponse:
      description: pets
      value:
        pets:
          - id: 1
            name: dog
          - id: 2
            name: cat
    PetResponseA:
      description: pet
      value:
        id: 1
        name: dog
        coord:
          x: 1.0
          y: 1.0
          z: 1.0
    PetResponseB:
      description: pet
      value:
        id: 2
        name: dog
        coord:
          x: 1.0
          y: 1.0
          z: 1.0
  parameters:
    PetId:
      name: pet_id
      in: path
      description: pet ID
      required: true
      schema:
        type: integer
        format: int32
    Limit:
      name: limit
      in: query
      description: データ件数
      required: false
      schema:
        type: integer
        format: int32
